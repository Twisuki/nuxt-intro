[{"data":1,"prerenderedAt":6},["ShallowReactive",2],{"bio":3},{"html":4,"frontmatter":5},"\u003Ch2>Nuxt Intro\u003C/h2>\n\u003Cp>Nuxt-intro 是一个基于 Nuxt 4 的个人主页模板. 它提供了一个简洁而现代的设计, 适合展示个人信息, 研究项目, 取得奖项和联系方式. 该模板预制内容固定, 配置项目少, 适合学生作为学术主页使用.\u003C/p>\n\u003Ch3>主要功能\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>个人信息展示\u003C/strong>: 显示头像, 名称, 欢迎语(或座右铭), 以及联系方式及社交媒体链接.\u003C/li>\n\u003Cli>\u003Cstrong>自我介绍和其他页面\u003C/strong>: 提供了 \u003Cstrong>自我介绍\u003C/strong>, \u003Cstrong>个人简历\u003C/strong>, \u003Cstrong>竞赛成绩\u003C/strong>, \u003Cstrong>获得奖项\u003C/strong> 和 \u003Cstrong>科研项目\u003C/strong> 五大模块, 同时还可自定义各个模块的内容.\u003C/li>\n\u003Cli>\u003Cstrong>主题定制\u003C/strong>: 通过修改配置文件, 除用户配置外, 还可自定义颜色主题.\u003C/li>\n\u003Cli>\u003Cstrong>响应式设计\u003C/strong>: 适配各种设备, 包括桌面和移动设备.\u003C/li>\n\u003C/ul>\n\u003Ch3>使用方法\u003C/h3>\n\u003Col>\n\u003Cli>克隆本仓库\u003C/li>\n\u003Cli>修改配置文件\u003C/li>\n\u003C/ol>\n\u003Ch3>md测试\u003C/h3>\n\u003Cp>\u003Cem>倾斜\u003C/em> \u003Cstrong>加粗\u003C/strong> \u003Cstrong>加粗2\u003C/strong> \u003Cs>删除线\u003C/s> \u003Ccode>关键词\u003C/code>\u003C/p>\n\u003Cul>\n\u003Cli>这是第一行\u003C/li>\n\u003Cli>这是第二行\u003C/li>\n\u003Cli>这是第三行\n\u003Cul>\n\u003Cli>子行1\u003C/li>\n\u003Cli>子行2\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Col>\n\u003Cli>这是第一行\u003C/li>\n\u003Cli>这是第二行\u003C/li>\n\u003Cli>这是第三行\n\u003Col>\n\u003Cli>子行1\u003C/li>\n\u003Cli>子行2\u003C/li>\n\u003C/ol>\n\u003C/li>\n\u003C/ol>\n\u003Cp>\u003Ca href=\"https://github.com/Twisuki\">Twisuki Github\u003C/a>\u003C/p>\n\u003C!-- ![图片测试, 白丝苏阳(意义明确的遮挡物)](https://github.com/Cute-Dress/Dress/blob/master/T/Twisuki/4.2-补充-白丝看书-241130.jpg?raw=true) -->\n\u003Ctable>\n\u003Cthead>\n\u003Ctr>\n\u003Cth>表头1\u003C/th>\n\u003Cth>表头2\u003C/th>\n\u003Cth>表头3\u003C/th>\n\u003C/tr>\n\u003C/thead>\n\u003Ctbody>\n\u003Ctr>\n\u003Ctd>1.1\u003C/td>\n\u003Ctd>1.2\u003C/td>\n\u003Ctd>1.3\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd>2.1\u003C/td>\n\u003Ctd>2.2\u003C/td>\n\u003Ctd>2.3\u003C/td>\n\u003C/tr>\n\u003C/tbody>\n\u003C/table>\n\u003Cpre>\u003Ccode class=\"language-JavaScript\">console.log(&quot;Hello world!&quot;);\n\nexport const getContent = async (filename: string) =&gt; {\n\tconst { default: fs } = await import(&quot;fs&quot;)\n\tconst { default: path } = await import(&quot;path&quot;)\n\tconst { default: matter } = await import(&quot;gray-matter&quot;)\n\tconst { default: MarkdownIt } = await import(&quot;markdown-it&quot;)\n\n\tconst md = new MarkdownIt({\n\t\thtml: true,\n\t\tlinkify: true,\n\t\ttypographer: true,\n\t})\n\n\tconst filePath = path.join(process.cwd(), &quot;config&quot;, &quot;layouts&quot;, filename)\n\tconst fileContent = fs.readFileSync(filePath, &quot;utf-8&quot;)\n\tconst { data, content: markdownContent } = matter(fileContent)\n\tconst html = md.render(markdownContent)\n\n\treturn { html, frontmatter: data }\n}\n\n\u003C/code>\u003C/pre>\n\u003Cblockquote>\n\u003Cp>Troubleshooting any problem without the error log is like driving with your eyes closed.\u003C/p>\n\u003Cp>在没有错误日志的情况下诊断任何问题, 无异于闭眼开车.\u003C/p>\n\u003Cp>Apache 官方文档 GettingStarted 篇章\u003C/p>\n\u003C/blockquote>\n",{},1759069448973]